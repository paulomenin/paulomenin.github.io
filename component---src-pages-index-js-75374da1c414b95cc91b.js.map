{"version":3,"file":"component---src-pages-index-js-75374da1c414b95cc91b.js","mappings":"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","sources":["webpack://gatsby-paulomenin-blog/./src/components/postCard.js","webpack://gatsby-paulomenin-blog/./src/components/postList.js","webpack://gatsby-paulomenin-blog/./src/components/tag.js","webpack://gatsby-paulomenin-blog/./src/components/tagList.js","webpack://gatsby-paulomenin-blog/./src/components/tagListContainer.js","webpack://gatsby-paulomenin-blog/./src/components/yearListContainer.js","webpack://gatsby-paulomenin-blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport Link from \"./link\"\n\nfunction PostCard({ post }) {\n  return (\n    <div className=\"group p-2 rounded-md hover:bg-neutral-200 duration-300\">\n      <Link href={post.fields.slug}>\n        <div className=\"flex justify-between\">\n          <h3\n            className=\"font-bold \n            text-neutral-700\n            group-hover:text-purple-800\n            transition-colors duration-300\"\n          >\n            {post.frontmatter.title}\n          </h3>\n          {!post.fields.published && (\n            <div className=\"not-published-tag\">Not Published</div>\n          )}\n        </div>\n        <p className=\"font-sans text-base text-neutral-700\">\n          {post.excerpt || post.frontmatter.description}\n        </p>\n        <p className=\"text-xs text-gray-500\">{post.frontmatter.date}</p>\n      </Link>\n    </div>\n  )\n}\n\nexport default PostCard\n","import * as React from \"react\"\nimport PostCard from \"./postCard\"\n\nfunction PostList({ posts }) {\n  const hasPosts = posts.length > 0\n  return (\n    <>\n      {!hasPosts && (\n        <p className=\"ml-2\">Nothing here at the moment. Come back later!</p>\n      )}\n      {hasPosts && (\n        <div className=\"flex flex-col gap-2\">\n          {posts.map(post => {\n            return <PostCard key={post.fields.slug} post={post} />\n          })}\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default PostList\n","import * as React from \"react\"\n\nfunction Tag({ name }) {\n  return <div className={`tag-link`}>{name}</div>\n}\n\nexport default Tag\n","import * as React from \"react\"\nimport Link from \"./link\"\nimport Tag from \"./tag\"\n\nfunction TagList({ tags, prefix }) {\n  const urlPrefix = prefix || \"tag\"\n  return (\n    <div className=\"flex gap-2 flex-wrap content-center\">\n      {tags.map(tag => {\n        const tagKey = tag.toLowerCase()\n        return (\n          <Link\n            className=\"no-underline\"\n            key={tagKey}\n            href={`/${urlPrefix}/${tagKey}`}\n          >\n            <Tag name={tag} />\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default TagList\n","import * as React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport TagList from \"./tagList\"\n\nfunction computeTagList(nodes) {\n  const uniqueTags = new Set()\n\n  nodes.forEach(({ frontmatter }) => {\n    frontmatter.tags?.forEach(tag => {\n      uniqueTags.add(tag)\n    })\n  })\n\n  return Array.from(uniqueTags).sort((a, b) =>\n    a.toLowerCase().localeCompare(b.toLowerCase())\n  )\n}\n\nfunction TagListContainer() {\n  const data = useStaticQuery(graphql`\n    query {\n      allMdx(filter: { fields: { visible: { eq: true } } }) {\n        nodes {\n          frontmatter {\n            tags\n          }\n        }\n      }\n    }\n  `)\n\n  const tagList = computeTagList(data.allMdx.nodes)\n\n  return <TagList tags={tagList} />\n}\n\nexport default TagListContainer\n","import * as React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport TagList from \"./tagList\"\n\nfunction computeYearList(groups) {\n  const yearList = groups.map(group => group.fieldValue)\n\n  return yearList.sort().reverse()\n}\n\nfunction YearListContainer() {\n  const data = useStaticQuery(graphql`\n    query {\n      allMdx(filter: { fields: { visible: { eq: true } } }) {\n        group(field: fields___year) {\n          fieldValue\n        }\n      }\n    }\n  `)\n\n  const tagList = computeYearList(data.allMdx.group)\n\n  return <TagList tags={tagList} prefix=\"year\" />\n}\n\nexport default YearListContainer\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport PostList from \"../components/postList\"\nimport TagListContainer from \"../components/tagListContainer\"\nimport YearListContainer from \"../components/yearListContainer\"\n\nfunction LandingPage({ data, location }) {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n\n  const blogPosts = data.blogPosts.nodes\n  const articlePosts = data.articlePosts.nodes\n  const slidesPosts = data.slidesPosts.nodes\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"Latest Posts\" />\n\n      <div className=\"card flex justify-center\">\n        <div className=\"lg:min-w-[700px] max-w-[700px]\">\n          {articlePosts.length > 0 && (\n            <>\n              <div className=\"flex justify-between mb-4 ml-2\">\n                <h1>Latest Articles</h1>\n              </div>\n              <PostList posts={articlePosts} />\n              <hr className=\"separator mt-4\" />\n            </>\n          )}\n\n          {blogPosts.length > 0 && (\n            <>\n              <div className=\"flex justify-between mb-4 ml-2 mt-4\">\n                <h1>Latest Blog Posts</h1>\n              </div>\n              <PostList posts={blogPosts} />\n              <hr className=\"separator mt-4\" />\n            </>\n          )}\n\n          {blogPosts.length > 0 && (\n            <>\n              <div className=\"flex justify-between mb-4 ml-2 mt-4\">\n                <h1>Latest Slide Decks</h1>\n              </div>\n              <PostList posts={slidesPosts} />\n              <hr className=\"separator mt-4\" />\n            </>\n          )}\n\n          <div className=\"ml-2 mt-4\">\n            <div className=\"flex justify-between mb-4\">\n              <h1>Tags</h1>\n            </div>\n            <TagListContainer />\n            <div className=\"h-4\" />\n            <YearListContainer />\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default LandingPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    blogPosts: allMdx(\n      filter: { fields: { category: { eq: \"blog\" }, visible: { eq: true } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 5\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n          category\n          published\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n    articlePosts: allMdx(\n      filter: { fields: { category: { eq: \"article\" }, visible: { eq: true } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 3\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n          category\n          published\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n    slidesPosts: allMdx(\n      filter: {\n        fields: { category: { eq: \"slidedeck\" }, visible: { eq: true } }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 3\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n          category\n          published\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["post","className","href","fields","slug","frontmatter","title","published","excerpt","description","date","posts","hasPosts","length","map","key","name","tags","prefix","urlPrefix","tag","tagKey","toLowerCase","tagList","nodes","uniqueTags","Set","forEach","add","Array","from","sort","a","b","localeCompare","computeTagList","useStaticQuery","allMdx","group","fieldValue","reverse","data","location","siteTitle","site","siteMetadata","blogPosts","articlePosts","slidesPosts"],"sourceRoot":""}