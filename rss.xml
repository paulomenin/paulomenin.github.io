<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Paulo Menin RSS Feed]]></title><description><![CDATA[Paulo Menin's website]]></description><link>https://paulomenin.dev</link><generator>GatsbyJS</generator><lastBuildDate>Sat, 27 Jul 2024 19:40:40 GMT</lastBuildDate><item><title><![CDATA[No title]]></title><description><![CDATA[Backends for Frontends Agenda What does it do? Pros Challenges Example What does it do? A BFF Manage calls to other microservices Prepare…]]></description><link>https://paulomenin.dev/post//slides/backends-for-frontends/content/</link><guid isPermaLink="false">https://paulomenin.dev/post//slides/backends-for-frontends/content/</guid><content:encoded>&lt;h1&gt;Backends for Frontends&lt;/h1&gt;&lt;hr/&gt;&lt;h2&gt;Agenda&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;What does it do?&lt;/li&gt;&lt;li&gt;Pros&lt;/li&gt;&lt;li&gt;Challenges&lt;/li&gt;&lt;li&gt;Example&lt;/li&gt;&lt;/ul&gt;&lt;hr/&gt;&lt;h2&gt;What does it do?&lt;/h2&gt;&lt;h4&gt;A BFF&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;Manage calls to other microservices&lt;/li&gt;&lt;li&gt;Prepare the response in the format the frontend expects, avoiding adding complexity to the frontend&lt;/li&gt;&lt;li&gt;Handle errors e degrades the response in case a service is not available&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;|—&lt;/p&gt;&lt;h4&gt;A BFF&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;A BFF never communicates with other BFF&lt;/li&gt;&lt;li&gt;Can simplify caching&lt;/li&gt;&lt;li&gt;Can be used for SSR (Server-Side Rendering)&lt;/li&gt;&lt;/ul&gt;&lt;hr/&gt;&lt;h2&gt;Pros&lt;/h2&gt;&lt;h4&gt;Coupled with a specific user experience&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;Trending to be small and simple&lt;/li&gt;&lt;li&gt;Eases the maintenance&lt;/li&gt;&lt;li&gt;Hides the microservices complexity that uses many protocols from the frontend&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;|—&lt;/p&gt;&lt;h2&gt;Pros&lt;/h2&gt;&lt;h4&gt;Normally the same team develops the Frontend and the BFF&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;Eases adaptation&lt;/li&gt;&lt;li&gt;Create an opportunity to synchronize deploys simplifying the process&lt;/li&gt;&lt;/ul&gt;&lt;hr/&gt;&lt;h2&gt;Challenges&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Depending on how similar the frontends are, it can lead to code duplication.&lt;/li&gt;&lt;li&gt;Adds a single point of failure to the frontend.&lt;/li&gt;&lt;li&gt;Grow the number of services and components rising the deploy complexity, this can be mitigated with good DevOps practices.&lt;/li&gt;&lt;/ul&gt;&lt;hr/&gt;&lt;h2&gt;Recommended Reading&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://samnewman.io/patterns/architectural/bff&quot;&gt;Sam Newman - Pattern: Backends For Frontends&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://philcalcado.com/2015/09/18/the_back_end_for_front_end_pattern_bff.html&quot;&gt;Phil Calçado - The Back-end for Front-end pattern&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[No title]]></title><description><![CDATA[Branch by Abstraction  Content What it is Which problem it solves Steps to apply References Branch by Abstraction What it is A pattern to…]]></description><link>https://paulomenin.dev/post//slides/branch-by-abstraction/content/</link><guid isPermaLink="false">https://paulomenin.dev/post//slides/branch-by-abstraction/content/</guid><content:encoded>&lt;h1&gt;Branch by Abstraction &lt;/h1&gt;&lt;hr/&gt;&lt;h2&gt;Content&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;What it is&lt;/li&gt;&lt;li&gt;Which problem it solves&lt;/li&gt;&lt;li&gt;Steps to apply&lt;/li&gt;&lt;li&gt;References&lt;/li&gt;&lt;/ul&gt;&lt;hr/&gt;&lt;h2&gt;Branch by Abstraction&lt;/h2&gt;&lt;h3&gt;What it is&lt;/h3&gt;&lt;p&gt;A pattern to gradually make changes while concurrently releasing software to production.&lt;/p&gt;&lt;p&gt;Commonly used in trunk-based-development to keep CI/CD pipelines running.&lt;/p&gt;&lt;hr/&gt;&lt;h2&gt;Branch by Abstraction&lt;/h2&gt;&lt;h3&gt;Concept&lt;/h3&gt;&lt;p&gt;The concept is to add a layer of abstraction between client code and the code that needs to be changed.&lt;/p&gt;&lt;p&gt;Can use feature toggle on the abstraction layer to branch the current code from code being working on.&lt;/p&gt;&lt;hr/&gt;&lt;h2&gt;What problem it solves&lt;/h2&gt;&lt;p&gt;Isolate development code from production code.&lt;/p&gt;&lt;p&gt;It allows code from other teams to be released to production while another team works on
changes that can last longer.&lt;/p&gt;&lt;hr/&gt;&lt;h2&gt;Steps to apply&lt;/h2&gt;&lt;h3&gt;A shopping cart service &lt;/h3&gt;&lt;div class=&quot;columns text-small&quot;&gt;&lt;div class=&quot;col&quot; data-markdown=&quot;true&quot;&gt;&lt;ol&gt;&lt;li&gt;Identify the change&lt;/li&gt;&lt;li&gt;Add an abstraction &lt;/li&gt;&lt;li&gt;Optional: Can rename &lt;/li&gt;&lt;li&gt;Work on new code &lt;/li&gt;&lt;li&gt;Toggle OFF &lt;/li&gt;&lt;li&gt;Go Live: Toggle ON &lt;/li&gt;&lt;li&gt;Optional: Remove Abstraction &lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;div class=&quot;col img-display&quot; data-markdown=&quot;true&quot;&gt;&lt;p&gt;&lt;img src=&quot;/ce1a3fa5a3615a61b41c4a3365df4e4e/shop-cart-1.svg&quot; alt=&quot;Fig-1&quot;/&gt; 
&lt;img src=&quot;/2ba5731352ead4450733304f5cccb6f5/shop-cart-2.svg&quot; alt=&quot;Fig-2&quot;/&gt; 
&lt;img src=&quot;/8c7398fc5a74860d278dfe4fee30d0ac/shop-cart-3.svg&quot; alt=&quot;Fig-3&quot;/&gt; 
&lt;img src=&quot;/8aeb00325e536c91c3b05875793e2a7e/shop-cart-4.svg&quot; alt=&quot;Fig-4&quot;/&gt; 
&lt;img src=&quot;/64cd38916a7fd273bfd6d5a2dfdc442e/shop-cart-5.svg&quot; alt=&quot;Fig-5&quot;/&gt; 
&lt;img src=&quot;/48a9a8e8a4fb0b7b8dc800989494fcc6/shop-cart-6.svg&quot; alt=&quot;Fig-6&quot;/&gt; 
&lt;img src=&quot;/74895b2caceec2cf9d003a77971770fb/shop-cart-7.svg&quot; alt=&quot;Fig-7&quot;/&gt; &lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;hr/&gt;&lt;h2&gt;References&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.branchbyabstraction.com/&quot;&gt;Paul Hammant - branchbyabstraction.com&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Backends for Frontends]]></title><link>https://paulomenin.dev/slidedeck/backends-for-frontends/</link><guid isPermaLink="false">https://paulomenin.dev/slidedeck/backends-for-frontends/</guid><pubDate>Mon, 26 Sep 2022 00:00:00 GMT</pubDate><content:encoded>&lt;div title=&quot;Backends for Frontends&quot; src=&quot;/slides/backends-for-frontends/&quot;&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Branch by Abstraction]]></title><link>https://paulomenin.dev/slidedeck/branch-by-abstraction/</link><guid isPermaLink="false">https://paulomenin.dev/slidedeck/branch-by-abstraction/</guid><pubDate>Sun, 10 Jul 2022 00:00:00 GMT</pubDate><content:encoded>&lt;div title=&quot;Branch by Abstraction&quot; src=&quot;/slides/branch-by-abstraction/&quot;&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Retry Pattern]]></title><description><![CDATA[In a distributed environment we have services calling external resources,
these resources can be temporarily unavailable for many reasons.
A…]]></description><link>https://paulomenin.dev/article/retry-pattern/</link><guid isPermaLink="false">https://paulomenin.dev/article/retry-pattern/</guid><pubDate>Mon, 04 Jul 2022 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;In a distributed environment we have services calling external resources,
these resources can be temporarily unavailable for many reasons.
A resilient application must know how to deal with the failures of other services.&lt;/p&gt;&lt;p&gt;One way to handle failures of external calls is using a retry pattern.
A retry mechanism will control the interval between attempts and the number
of retries before giving up.&lt;/p&gt;&lt;p&gt;But first, an application must determine if the failure is transient.
A transient failure occurs because of a temporary fault condition that causes
a service down for a few seconds.
Examples of transient failures are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Network failure: missing connectivity for a short period.&lt;/li&gt;&lt;li&gt;Unavailability: a service crash or down for maintenance.&lt;/li&gt;&lt;li&gt;Overload: an external service that cannot accept new requests.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;In another hand, an authentication failure, for example, will not be resolved
after a few seconds, and should not be retried.&lt;/p&gt;&lt;p&gt;Different applications have different requirements and require different fault
handling strategies. Some must retry more frequently, others can have a long interval
between attempts, for example, in background jobs where a user is not waiting for feedback.&lt;/p&gt;&lt;p&gt;Retry pattern should be used when faults may self-correct after a short delay.&lt;/p&gt;&lt;h4&gt;Interval between attempts&lt;/h4&gt;&lt;p&gt;Also known as Back-off time, the time to wait before another attempt. Some strategies are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Constant/Fixed interval: the interval is the same between attempts.&lt;/li&gt;&lt;li&gt;Incremental Back-off: the interval is calculated based on the number of attempts,
it can be calculated in many ways:&lt;ul&gt;&lt;li&gt;Linear: using a constant multiplier.&lt;/li&gt;&lt;li&gt;Exponential: &lt;div math=&quot;t = b^c&quot;&gt;&lt;/div&gt; where&lt;div math=&quot;t&quot;&gt;&lt;/div&gt; is the time delay,&lt;div math=&quot;b&quot;&gt;&lt;/div&gt; is the multiplicative factor and&lt;div math=&quot;c&quot;&gt;&lt;/div&gt; is the number of attempts. A common value for b is 2 ( &lt;div math=&quot;t = 2^c&quot;&gt;&lt;/div&gt; ), which will double the delay for every attempt.&lt;/li&gt;&lt;li&gt;Fibonacci: the sum of the last two intervals.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Random: usually a value between a minimum and a maximum range.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Also, a strategy can use combinations, like a constant interval plus jitter (a short random delay)
to avoid many parallel attempts to fire at the same time.
Another combination is to use a truncated back-off time, it is to define a maximum time
so the attempts don’t end up waiting longer and longer.&lt;/p&gt;&lt;h4&gt;When to give up&lt;/h4&gt;&lt;p&gt;A common strategy to give up the operation and abort is to use a fixed number of attempts.&lt;/p&gt;&lt;p&gt;Another possibility is to use a timeout, in this case, the number of attempts will depend on the strategy
used to determine the back-off time.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Brewing Coffee]]></title><description><![CDATA[Since I started programming I always had a cup of coffee.
It became an old habit to start my day by reading e-mails and tasting coffee.
I…]]></description><link>https://paulomenin.dev/blog/brewing-coffe/</link><guid isPermaLink="false">https://paulomenin.dev/blog/brewing-coffe/</guid><pubDate>Fri, 17 Jun 2022 10:14:52 GMT</pubDate><content:encoded>&lt;p&gt;Since I started programming I always had a cup of coffee.
It became an old habit to start my day by reading e-mails and tasting coffee.
I was used to buying or having the free coffee the workplace offers.
A note here: In these old days I always put a lot of sugar on coffee.&lt;/p&gt;&lt;p&gt;One day I read that reducing the quantity of sugar in coffee is more healthy.
I tasted the coffee without sugar and it was too bitter for me. But I insisted
to reduce and instead of no sugar at all in the coffee I started to reduce the
quantity cutting the amount of sugar by half in the beginning and week after
week reducing until I reached zero sugar.
I confess that after I remove all the sugar it took a couple of weeks to get used
to sugar-free coffee. But sometimes I doesn’t enjoy the coffee, sometimes it
was too bitter and I consumed it for the side effects only.&lt;/p&gt;&lt;p&gt;In 2020 when the covid-19 arrived I was forced to have coffee at home.
Because of that, my journey into the coffee world began. When I have to do something
I like to know what I’m doing, so started to learn more about coffee. I took a free
online course that explains the path of a cup of coffee, from seed, producers, the
varieties of the coffee plant around the world, how different nations prepare coffee,
the classification of beans, and the processes that the coffee beans pass until you can
taste the cup of coffee. It was an informative course, kind of a documentary, but very
helpful and interesting to me.&lt;/p&gt;&lt;p&gt;Discovering this new world of coffee and the variety of options and complexity of ways,
variables, and methods to brew coffee, made me start a new hobby:
Brew a nice cup of coffee at home! A coffee that can be enjoyable from the process to brew,
the sounds of manually grinding the beans, the aroma of fresh coffee, and the taste
that you can have: almost free of bitterness without adding sugar.&lt;/p&gt;&lt;p&gt;A nice cup of coffee also is something very personal, from light to strong coffee,
from sour to sweet to bitter, from fruit notes to caramel notes. The world of
specialty coffee has a place for everyone!&lt;/p&gt;&lt;p&gt;Brewing coffee has a lot of variables from the origin of the beans, the roast, the size
of the ground, the temperature of the water, the brew method, extraction time, ratio of
the coffee and water, among many other variables.
There is no right or wrong here, the right way to make it is the way you like it best!
And it requires a lot of experimentation until you find what you like.&lt;/p&gt;&lt;p&gt;I’m going to make a series of posts on methods and recipes as I’m learning more about
coffee and I hope that this can be helpful for you to have and enjoy a nice cup of coffee too.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Why I started blogging in 2022]]></title><description><![CDATA[Starting a blog is something I have been thinking about a lot for some time. I'm a person who makes many annotations while learning…]]></description><link>https://paulomenin.dev/blog/why-i-started-blogging/</link><guid isPermaLink="false">https://paulomenin.dev/blog/why-i-started-blogging/</guid><pubDate>Mon, 06 Jun 2022 22:10:00 GMT</pubDate><content:encoded>&lt;p&gt;Starting a blog is something I have been thinking about a lot for some time.&lt;/p&gt;&lt;p&gt;I’m a person who makes many annotations while learning something.
I have annotations on pieces of paper, notebooks, and electronic documents saved in the cloud.
The kind of information that I save ranges from words, sentences, and reference links, to diagrams and mind maps.&lt;/p&gt;&lt;p&gt;While I have my own way to organize these pieces of information, I confess that it’s not well structured.
Many times I annotate fast to not break my flow.&lt;/p&gt;&lt;p&gt;One of the reasons to start blogging is to have time to give structure to my annotations and have a place to easily find a reference for some concept.&lt;/p&gt;&lt;p&gt;Also, it is a good way to share knowledge.
Some years ago I noted that I’m more into teaching concepts to colleagues.
Every time I create a new support material to help explain something to others.
I think it would be nice to create it once and reuse it every time that I need to explain again. That’s the reason why I decided to have a section on this website to put my presentations and articles.&lt;/p&gt;&lt;p&gt;The reason to blog in English is that my mother language is Brazilian Portuguese, and post content in English is a way for me to practice my written English and have a broader audience.&lt;/p&gt;&lt;p&gt;Thanks for reading this! I hope that you like the content of this website and that it can be useful.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Go - Board Game]]></title><description><![CDATA[Basic 15 minutes overview of the Go board game, good to introduce the rules of the game.]]></description><link>https://paulomenin.dev/slidedeck/go-board-game-presentation/</link><guid isPermaLink="false">https://paulomenin.dev/slidedeck/go-board-game-presentation/</guid><pubDate>Mon, 30 May 2022 19:12:03 GMT</pubDate><content:encoded>&lt;p&gt;Basic 15 minutes overview of the Go board game, good to introduce the rules of the game.&lt;/p&gt;&lt;div title=&quot;The game of Go&quot; src=&quot;https://paulomenin.github.io/go-presentation/&quot;&gt;&lt;/div&gt;</content:encoded></item></channel></rss>