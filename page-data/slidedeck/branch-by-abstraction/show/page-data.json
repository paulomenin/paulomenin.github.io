{"componentChunkName":"component---src-templates-slide-show-js","path":"/slidedeck/branch-by-abstraction/show","result":{"data":{"site":{"siteMetadata":{"title":"Paulo Menin"}},"mdx":{"id":"f5e2df69-ad3f-5bad-bfd9-35da4660f125","body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Branch by Abstraction\",\n  \"description\": \"Presentation about the Branch by Abstraction pattern\",\n  \"date\": \"2022-07-10T00:00:00Z\",\n  \"tags\": [\"slide-deck\", \"design-patterns\", \"trunk-based-development\"],\n  \"slide_url\": \"/slides/branch-by-abstraction/\"\n};\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\nvar RevealJsSlides = makeShortcode(\"RevealJsSlides\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(RevealJsSlides, {\n    title: \"Branch by Abstraction\",\n    src: \"/slides/branch-by-abstraction/\",\n    mdxType: \"RevealJsSlides\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Branch by Abstraction","description":"Presentation about the Branch by Abstraction pattern","slide_url":"/slides/branch-by-abstraction/"},"fields":{"published":true}}},"pageContext":{"id":"f5e2df69-ad3f-5bad-bfd9-35da4660f125"}},"staticQueryHashes":["2841359383"]}