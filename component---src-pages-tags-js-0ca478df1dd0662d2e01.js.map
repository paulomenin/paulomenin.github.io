{"version":3,"file":"component---src-pages-tags-js-0ca478df1dd0662d2e01.js","mappings":"6LAMA,MAJA,UAAa,KAAEA,IACb,OAAO,uBAAKC,UAAY,YAAYD,EACtC,ECoBA,MApBA,UAAiB,KAAEE,EAAI,OAAEC,IACvB,MAAMC,EAAYD,GAAU,MAC5B,OACE,uBAAKF,UAAU,uCACZC,EAAKG,KAAIC,IACR,MAAMC,EAASD,EAAIE,cACnB,OACE,gBAAC,IAAI,CACHP,UAAU,eACVQ,IAAKF,EACLG,KAAO,IAAGN,KAAaG,KAEvB,gBAAC,EAAG,CAACP,KAAMM,IACN,IAKjB,C,yDCcA,IAlBA,WACE,MAYMK,EA3BR,SAAwBC,GACtB,MAAMC,EAAa,IAAIC,IAQvB,OANAF,EAAMG,SAAQ,EAAGC,kBAAmB,IAAD,EACjB,QAAhB,EAAAA,EAAYd,YAAI,OAAhB,EAAkBa,SAAQT,IACxBO,EAAWI,IAAIX,EAAI,GACnB,IAGGY,MAAMC,KAAKN,GAAYO,MAAK,CAACC,EAAGC,IACrCD,EAAEb,cAAce,cAAcD,EAAEd,gBAEpC,CAekBgB,EAZHC,EAAAA,EAAAA,gBAAe,cAYQC,OAAOd,OAE3C,OAAO,gBAAC,IAAO,CAACV,KAAMS,GACxB,C,yDCRA,IAhBA,WACE,MAUMA,GAVOc,EAAAA,EAAAA,gBAAe,cAUSC,OAAOC,MAhBpBtB,KAAIsB,GAASA,EAAMC,aAE3BR,OAAOS,UAgBvB,OAAO,gBAAC,IAAO,CAAC3B,KAAMS,EAASR,OAAO,QACxC,C,oFCMA,UAtBA,UAAmB,KAAE2B,EAAI,SAAEC,IAAa,IAAD,EACrC,MAAMC,GAAkC,QAAtB,EAAAF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBC,QAAU,QAEpD,OACE,gBAAC,IAAM,CAACJ,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAG,CAACG,MAAM,aAEX,uBAAKlC,UAAU,4BACb,uBAAKA,UAAU,kCACb,uBAAKA,UAAU,6BACb,sBAAIA,UAAU,QAAO,aAGvB,gBAAC,IAAgB,MACjB,uBAAKA,UAAU,QACf,gBAAC,IAAiB,QAK5B,C","sources":["webpack://gatsby-paulomenin-blog/./src/components/tag.js","webpack://gatsby-paulomenin-blog/./src/components/tagList.js","webpack://gatsby-paulomenin-blog/./src/components/tagListContainer.js","webpack://gatsby-paulomenin-blog/./src/components/yearListContainer.js","webpack://gatsby-paulomenin-blog/./src/pages/tags.js"],"sourcesContent":["import * as React from \"react\"\n\nfunction Tag({ name }) {\n  return <div className={`tag-link`}>{name}</div>\n}\n\nexport default Tag\n","import * as React from \"react\"\nimport Link from \"./link\"\nimport Tag from \"./tag\"\n\nfunction TagList({ tags, prefix }) {\n  const urlPrefix = prefix || \"tag\"\n  return (\n    <div className=\"flex gap-2 flex-wrap content-center\">\n      {tags.map(tag => {\n        const tagKey = tag.toLowerCase()\n        return (\n          <Link\n            className=\"no-underline\"\n            key={tagKey}\n            href={`/${urlPrefix}/${tagKey}`}\n          >\n            <Tag name={tag} />\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default TagList\n","import * as React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport TagList from \"./tagList\"\n\nfunction computeTagList(nodes) {\n  const uniqueTags = new Set()\n\n  nodes.forEach(({ frontmatter }) => {\n    frontmatter.tags?.forEach(tag => {\n      uniqueTags.add(tag)\n    })\n  })\n\n  return Array.from(uniqueTags).sort((a, b) =>\n    a.toLowerCase().localeCompare(b.toLowerCase())\n  )\n}\n\nfunction TagListContainer() {\n  const data = useStaticQuery(graphql`\n    query {\n      allMdx(filter: { fields: { visible: { eq: true } } }) {\n        nodes {\n          frontmatter {\n            tags\n          }\n        }\n      }\n    }\n  `)\n\n  const tagList = computeTagList(data.allMdx.nodes)\n\n  return <TagList tags={tagList} />\n}\n\nexport default TagListContainer\n","import * as React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport TagList from \"./tagList\"\n\nfunction computeYearList(groups) {\n  const yearList = groups.map(group => group.fieldValue)\n\n  return yearList.sort().reverse()\n}\n\nfunction YearListContainer() {\n  const data = useStaticQuery(graphql`\n    query {\n      allMdx(filter: { fields: { visible: { eq: true } } }) {\n        group(field: fields___year) {\n          fieldValue\n        }\n      }\n    }\n  `)\n\n  const tagList = computeYearList(data.allMdx.group)\n\n  return <TagList tags={tagList} prefix=\"year\" />\n}\n\nexport default YearListContainer\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport TagListContainer from \"../components/tagListContainer\"\nimport YearListContainer from \"../components/yearListContainer\"\n\nfunction TagsIndex({ data, location }) {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All Tags\" />\n\n      <div className=\"card flex justify-center\">\n        <div className=\"lg:min-w-[700px] max-w-[700px]\">\n          <div className=\"flex justify-between mb-4\">\n            <h1 className=\"mb-3\">All Tags</h1>\n          </div>\n\n          <TagListContainer />\n          <div className=\"h-4\" />\n          <YearListContainer />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default TagsIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["name","className","tags","prefix","urlPrefix","map","tag","tagKey","toLowerCase","key","href","tagList","nodes","uniqueTags","Set","forEach","frontmatter","add","Array","from","sort","a","b","localeCompare","computeTagList","useStaticQuery","allMdx","group","fieldValue","reverse","data","location","siteTitle","site","siteMetadata","title"],"sourceRoot":""}